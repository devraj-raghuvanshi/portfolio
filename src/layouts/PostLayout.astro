---
import { type BlogSchema } from "../content/config";
import BaseLayout from "./BaseLayout.astro";
import dayjs from "dayjs";
import localizedFormat from "dayjs/plugin/localizedFormat";

export interface Props extends BlogSchema {}

const { title, description, startDate, endDate, updatedDate, heroImage, badge, tags = [] } = Astro.props;
dayjs.extend(localizedFormat);
// const displayDate = dayjs(startDate).format("ll")
import { Image } from "astro:assets";
---

<BaseLayout title={title} description={description} image={heroImage}, ogType="article">
  <main class="md:flex md:justify-center">
    <article class="prose prose-lg max-w-[750px] w-full">
      <div class="mb-8">
        <div class="flex flex-col md:flex-row gap-6 items-start">
          {heroImage && (
            <div class="md:w-1/3 w-full">
              <Image
                width={400}
                height={300}
                format="webp"
                src={heroImage}
                alt={title}
                class="w-full rounded-lg shadow-md object-cover"
              />
            </div>
          )}
          <div class="flex-1">
            <div class="flex items-center gap-2 mb-2">
              <span class="badge badge-sm">{description}</span>
              {badge && <span class="badge badge-sm badge-outline">{badge}</span>}
            </div>
            <h1 class="text-3xl font-bold mb-2">{title}</h1>
            <p class="text-base-content/70 text-sm">
              {startDate} - {endDate}
            </p>
          </div>
        </div>
      </div>

      <div class="divider my-4"></div>

      <div class="prose max-w-none">
        <slot />
      </div>

      {
        updatedDate && (
          <div class="mt-8 text-sm text-base-content/70">
            Last updated on <time>{updatedDate}</time>
          </div>
        )
      }
    </article>
  </main>
</BaseLayout>

<style>
  .prose {
    max-width: 100%;
  }
  .prose img {
    margin: 0 auto;
    border-radius: 0.5rem;
  }
  .prose a {
    color: hsl(var(--p));
    text-decoration: none;
  }
  .prose a:hover {
    color: hsl(var(--pf));
    text-decoration: underline;
  }
  /* Style for the publication and GitHub buttons */
  .prose :global(.bg-gray-100) {
    @apply inline-flex gap-4 my-4 bg-transparent p-0;
  }
  .prose :global(.bg-gray-100 a) {
    @apply btn btn-xs normal-case no-underline;
  }
  .prose :global(.bg-gray-100 a:first-child) {
    @apply btn-neutral;
  }
  .prose :global(.bg-gray-100 a:not(:first-child)) {
    @apply btn-outline btn-neutral;
  }
  .prose :global(.bg-gray-100 a:hover) {
    text-decoration: none;
  }
</style>
